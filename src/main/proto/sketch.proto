package protobuf.srl.sketch;

message SrlSketch {
    optional string id = 1;
    optional string domainId = 4; // used to find the domain for recognition
    repeated SrlObject sketch = 5;

    optional string author = 6;
    optional Pen pen = 7;
    optional Device device = 8;
    repeated SketchAttribute attributes = 9;
    optional string unit = 10;
    repeated SrlPoint points = 11;
    repeated SrlSubStroke subStrokes = 12;
}

/**
 * Wraps all of the sketch objects so we can fake inheritance.
 */
message SrlObject {
    required ObjectType type = 1;
    required bytes object = 2;
    // TODO: add attributes field (named protoAttributes)
    // it was put in the object and not the shape and stroke because both use it and this saves on code space.
}

/**
 * The object type of the shape.
 */
enum ObjectType {
    SHAPE = 0;
    STROKE = 1;
    POINT = 2;
    SKETCH = 3;
}

message SrlShape {
    required string id = 1;
    required uint64 time = 2;
    optional string name = 3;
    optional bool isUserCreated = 4;
    repeated SrlInterpretation interpretations = 5; // DEPRECATED
    repeated SrlObject subComponents = 6;
    optional SrlBoundingBox boundingbox = 7;
    optional SrlInterpretation interpretation = 8;
    repeated SketchAttribute attributes = 9;
}

message SrlStroke {
    required string id = 1;
    required uint64 time = 2; // the time is equal to when the stroke is finished.
    optional string name = 3;
    repeated SrlPoint points = 4;
    optional SrlBoundingBox boundingbox = 5;
    optional string author = 6;
    optional Pen pen = 7;
    optional Device device = 8;
    repeated SketchAttribute attributes = 9;
    optional bool isUserCreated = 10;
}

/**
 * A part of a stroke or a set of points.
 */
message SrlSubStroke {
    optional string id = 1;
    // This is the id of the parent stroke
    optional string stroke = 2;
    optional string startIndex = 3;
    optional string stopIndex = 4;
    // list of point ids
    repeated string points = 5;
    repeated SketchAttribute attributes = 6;
    optional string name = 7;
}

// If a point is added directly on the sketch surface then it is in a SrlStroke
// in a SrlObject all with the same id and time and name.
message SrlPoint {
    required string id = 1;
    required uint64 time = 2;
    optional string name = 3;
    required double x = 4;
    required double y = 5;

    /**
      * Points can have pressure depending on the input device.   It is a value between 0 and 1.
      */
    optional double pressure = 6;
    /**
     * Points can have size depending on the input device.  This does not have an upper limit but the default value is 1.
     */
    optional double size = 7;
    /**
     * Gives the instantaneous speed calculated from this and the previous
     * point.
     */
    optional double speed = 8;
}

// TODO: change to SrlInterpretation
// TODO: change name to label
message SrlInterpretation {
    required string label = 1;
    required double confidence = 2;
    optional double complexity = 3;
    optional string interpretationId = 4;
    optional string recognizerId = 5;
    optional string isEndState = 6;
    optional string isForced = 7;
    optional string description = 8;
    optional string domain = 9;
}

message SrlBoundingBox {
    required double x = 1;
    required double y = 2;
    required double width = 3;
    required double height = 4;
}

message SrlAttributes {
    repeated string keys = 1;
    repeated string values = 2;
}

message RecognitionTemplate {
    optional string templateId = 1;
    // oneof TemplateType {
        optional SrlStroke stroke = 2;
        optional SrlShape shape = 3;
        optional SrlSketch sketch = 4;
    // }
    optional SrlInterpretation interpretation = 5;

    /**
     * How the template should be used for training.
     */
    optional TemplateType type = 6 [default = UNKNOWN];

    enum TemplateType {
        POSITIVE = 1;
        UNKNOWN = 0;
        NEGATIVE = -1;
    }
}

/**
 * The person who created the sketch.
 */
message Sketcher {
    optional string id = 1;
    optional string nickname = 2;
}

message Device {
    optional string id = 1;
    optional int32 dpi = 2;
    optional string os = 3;
    optional bool penEnabled = 4;
    optional bool touchEnabled = 5;
    optional bool mouseEnables = 6;
    optional bool physicalKeyboard = 7;
}

message Pen {
    optional string id = 1;
    optional string productName = 2;
    optional string brandName = 3;
    optional string isPenFinger = 4;
    optional string isPenMouse = 5;
    optional string penDigit = 6;
}

/**
 * An attribute that can be applied to a stroke.
 */
message SketchAttribute {
    optional string key = 1;
    optional string value = 2;
}
